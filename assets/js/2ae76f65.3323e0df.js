"use strict";(self.webpackChunkrealityworld=self.webpackChunkrealityworld||[]).push([[6641],{4137:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>m});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var l=r.createContext({}),c=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=c(e.components);return r.createElement(l.Provider,{value:t},e.children)},u="mdxType",f={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,l=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),u=c(n),d=o,m=u["".concat(l,".").concat(d)]||u[d]||f[d]||a;return n?r.createElement(m,i(i({ref:t},p),{},{components:n})):r.createElement(m,i({ref:t},p))}));function m(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,i=new Array(a);i[0]=d;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[u]="string"==typeof e?e:o,i[1]=s;for(var c=2;c<a;c++)i[c]=n[c];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},9532:(e,t,n)=>{n.r(t),n.d(t,{contentTitle:()=>i,default:()=>u,frontMatter:()=>a,metadata:()=>s,toc:()=>l});var r=n(7462),o=(n(7294),n(4137));const a={},i=void 0,s={type:"mdx",permalink:"/feature/cogine",source:"@site/src/pages/feature/cogine.mdx",description:"First define a Story struct with editor:",frontMatter:{}},l=[],c={toc:l},p="wrapper";function u(e){let{components:t,...a}=e;return(0,o.kt)(p,(0,r.Z)({},c,a,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"First define a Story struct with editor:"),(0,o.kt)("p",null,(0,o.kt)("img",{alt:"std",src:n(6176).Z,width:"1362",height:"589"})),(0,o.kt)("p",null,"Then define your component's input and output using the above defined struct also with editor:"),(0,o.kt)("p",null,(0,o.kt)("img",{alt:"std",src:n(7297).Z,width:"1618",height:"504"})),(0,o.kt)("p",null,"Then define your logic flow:"),(0,o.kt)("p",null,(0,o.kt)("img",{alt:"std",src:n(3297).Z,width:"1614",height:"303"})),(0,o.kt)("p",null,"Finally write your component's code with Lua:"),(0,o.kt)("p",null,"fetch_top_hn.lua:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-lua"},'function updating()\n    local story_ids = get_url("https://hacker-news.firebaseio.com/v0/topstories.json?print=pretty")\n    for i = 1, #story_ids do\n        local url = string.format("https://hacker-news.firebaseio.com/v0/item/%s.json?print=pretty", story_ids[i])\n        stories[i] = get_url(url)\n    end\nend\n')),(0,o.kt)("p",null,"interpret_the_group.lua:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-lua"},'function updating()\n    local prompt = string.format("Based on the following list of HackerNews threads, filter this list to only launches of new AI projects: %s", table_to_string(stories))\n    local result = chat_completions("Please only return the result list as a RFC8259 compliant JSON format with no \'\\\' character, no extra information", prompt)\n    if result["ok"] == true then\n        for i = 1, #result["content"] do\n            local story = {}\n            out_stories[i] = result["content"][i]\n        end\n    end\nend\n')),(0,o.kt)("p",null,"format_and_rank.lua:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-lua"},'function updating()\n    local prompt = string.format("this list of new AI projects in markdown, ranking the most interesting projects from most interesting to least. %s", table_to_string(stories))\n    local result = chat_completions("Please only return the result list as a RFC8259 compliant JSON format with no \'\\\' character, no extra information",prompt)\n\n    local msg = "The news with AI topics are:\\n"\n    if result["ok"] == true then\n        for i = 1, #result["content"] do\n            msg = string.format("%s%d. %s\\n",msg,i,result["content"][i]["title"])\n        end\n    end\n \n    message["content"] = msg\n    message["receiver"] = "user"\nend\n')))}u.isMDXComponent=!0},7297:(e,t,n)=>{n.d(t,{Z:()=>r});const r=n.p+"assets/images/cogine-components-c811dd4b9b3bcee1dcddcd64eeb2e83b.png"},3297:(e,t,n)=>{n.d(t,{Z:()=>r});const r=n.p+"assets/images/cogine-flow-a9536cf3eaca92b6114d933df6f95c55.png"},6176:(e,t,n)=>{n.d(t,{Z:()=>r});const r=n.p+"assets/images/cogine-standards-afa43691cf3fe033e9a474df75d9608c.png"}}]);